{
    "collab_server" : "",
    "contents" : "#' Get Search Volume Data for Keywords\n#'\n#' Get search volume data though time, along with CPC and CMP data\n#' for a set of up to 800 keywords.\n#'\n#' For more on how to use this see the Keyword Tool API documentation:\n#' http://keywordtool.io/api/documentation\n#'\n#' @param keywords A vector of keywords to analyse\n#' @param api_key API key from keywordtool.io\n#' @param metrics_location Optional vector of location codes to get results from (see documentation for codes). Maximum 10 locations.\n#' @param metrics_language Optional vector of language to search with. See `language_codes` for list of codes. Maximum 5 languages.\n#' @param metrics_network Search network that will be used to pull the search volume data.\n#' @param metrics_currency The currency that will be used to display cost-per-click (CPC) data. See 'currency_codes` for list of codes.\n#' @param method Whether to request using get or post. Post is recommended for large requests.\n#'\n#' @return An object of class 'keyword_tool_result'.\n#' @export\n#'\n#' @examples \\dontrun{\n#'\n#' keyword_tool_key <- '1234'\n#'\n#' results <-\n#' get_search_volume(keywords = c('scottish salmon', 'scotland fishing'),\n#'                   api_key = keyword_tool_key,\n#'                   metrics_location = c(20339,20342, 2840), #Scotland, England and US\n#'                   metrics_network = 'googlesearch',\n#'                   metrics_currency = 'GBP')\n#'\n#'  str(results$content)\n#'\n#' }\nget_search_volume <- function(keywords,\n                              api_key,\n                              metrics_location = NULL,\n                              metrics_language = NULL,\n                              metrics_network  = c('googlesearchnetwork', 'googlesearch'),\n                              metrics_currency = NULL,\n                              method           = c('get', 'post')){\n\n  # Converting vector of keywords into JSON format\n  keywords <- paste0('\"', keywords, '\"')\n  keywords <- paste(keywords, collapse = ',')\n  keywords <- paste0('[', keywords, ']')\n\n  if (length(metrics_location) > 10) stop('A maximum 10 locations are accepted in a single API request.')\n  if (length(metrics_language) > 5) stop('A maximum 5 languages are accepted in a single API request.')\n  if (length(metrics_currency) > 1) stop('Only one currency value can be used in a request.')\n\n  invalid_languages <- setdiff(metrics_language, language_codes$Value)\n  if (length(invalid_languages) > 0) stop('Invalid language codes: ', invalid_languages)\n\n  invalid_currencys <- setdiff(metrics_currency, currency_codes$Value)\n  if (length(invalid_currencys) > 0) stop('Invalid currency codes: ', invalid_currencys)\n\n  metrics_location <- paste(metrics_location, collapse = ',')\n  metrics_language <- paste(metrics_language, collapse = ',')\n\n  metrics_network <- match.arg(metrics_network)\n  method <- match.arg(method)\n\n  parameters <- list(\n    'keyword'          = keywords,\n    'apikey'           = api_key,\n    'metrics_location' = metrics_location,\n    'metrics_language' = metrics_language,\n    'metrics_network'  = metrics_network,\n    'metrics_currency' = metrics_currency,\n    'output'           = 'json'\n  )\n\n  # Remove null parameters\n  parameters <- Filter(function(x) !is.null(x), parameters)\n\n  base_url <- 'http://api.keywordtool.io/v2/search/volume/google'\n\n  if (method == 'get'){\n    url <- httr::modify_url(base_url, query = parameters)\n    response <- httr::GET(url)\n  }\n\n  if (method == 'post'){\n    response <- httr::POST(base_url, body = parameters)\n  }\n\n  if (httr::http_type(response) != \"application/json\") {\n    stop(\"API did not return json\", call. = FALSE)\n  }\n\n  content <- httr::content(response, \"text\")\n  parsed  <- jsonlite::fromJSON(content, simplifyVector = FALSE)\n\n  if (!is.null(parsed$error)) {\n    stop(httr::http_status(response)$message, '\\n',\n         'API Message: ', parsed$error$message, '\\n',\n         'API Code: ', parsed$error$code)\n  }\n\n  httr::stop_for_status(response)\n\n  structure(\n    list(\n      content     = parsed,\n      response    = response,\n      raw_content = content,\n      parameters  = as.list(match.call())\n    ),\n    class = \"keyword_tool_result\"\n  )\n\n}\n\n\n\n",
    "created" : 1479906394527.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2114057588",
    "id" : "F5DA6C9F",
    "lastKnownWriteTime" : 1479929041,
    "last_content_update" : 1479929041519,
    "path" : "~/Documents/APIs/keywordtool/R/functions.R",
    "project_path" : "R/functions.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}